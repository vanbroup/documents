name: Build Draft Guidelines
on: [push, pull_request, workflow_dispatch]
jobs:
  build_docs:
    permissions:
      contents: write
    strategy:
      matrix:
        document:
          - 'BR'
          - 'EVG'
          - 'NSR'
    name: Build ${{ matrix.document }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Checkout old version for redline
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha || github.event.push.before }}
          path: old/
      - uses: docker://ghcr.io/cabforum/build-guidelines-action:2.1.0
        id: build_doc
        with:
          markdown_file: docs/${{ matrix.document }}.md
          diff_file: old/docs/${{ matrix.document }}.md
          pdf: true
          docx: true
          lint: true
          draft: ${{ !(github.event_name == 'push' && github.repository == 'cabforum/servercert' && github.ref == 'refs/heads/main') }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.document }}-${{ github.event.pull_request.head.sha || github.sha }}-${{ github.event_name }}
          path: |
            ${{ steps.build_doc.outputs.pdf_file }}
            ${{ steps.build_doc.outputs.docx_file }}
            ${{ steps.build_doc.outputs.pdf_redline_file }}
          if-no-files-found: 'error'

      # TODO: It would be good to introduce a decidated version value in the frontmatter if we can use that to create the subtitle
      - name: Get document version
        id: get_version
        run: |
          version="`head -20 docs/${{ matrix.document }}.md | grep "subtitle: Version " | sed -e 's/subtitle: Version /v/'`"
          echo Document ${{ matrix.document }} is at version $version
          echo "version=${version}" >> $GITHUB_OUTPUT

      # TODO: Split of the following into a separate job (and move permissions to that job)
      # TODO: Rename files to include the version number
      - name: Creates a release in GitHub and uploads final document and redline
        #if: github.event.pull_request.base.ref == 'main' && github.event_name == 'push'
        run: |
            gh release create ${{ steps.get_version.outputs.version }} \
                ${{ steps.build_doc.outputs.pdf_file }} \
                ${{ steps.build_doc.outputs.pdf_redline_file }} \
                --generate-notes \
                --draft
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}


